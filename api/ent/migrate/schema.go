// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// MachinesColumns holds the columns for the "machines" table.
	MachinesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "year", Type: field.TypeUint},
		{Name: "lift_height", Type: field.TypeUint},
		{Name: "motor_hours", Type: field.TypeUint},
		{Name: "drive", Type: field.TypeString},
		{Name: "weight", Type: field.TypeUint},
		{Name: "load_capacity", Type: field.TypeUint},
		{Name: "rent_price", Type: field.TypeUint, Nullable: true},
		{Name: "sale_price", Type: field.TypeUint},
		{Name: "description", Type: field.TypeString, Size: 5000},
		{Name: "hidden", Type: field.TypeBool, Default: false},
		{Name: "deleted", Type: field.TypeBool, Default: false},
		{Name: "number_of_images", Type: field.TypeInt, Nullable: true},
		{Name: "internal_description", Type: field.TypeString, Nullable: true, Size: 5000},
	}
	// MachinesTable holds the schema information for the "machines" table.
	MachinesTable = &schema.Table{
		Name:       "machines",
		Columns:    MachinesColumns,
		PrimaryKey: []*schema.Column{MachinesColumns[0]},
	}
	// MachineAccessoriesColumns holds the columns for the "machine_accessories" table.
	MachineAccessoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name1", Type: field.TypeString, Nullable: true},
		{Name: "name2", Type: field.TypeString, Nullable: true},
		{Name: "name3", Type: field.TypeString, Nullable: true},
		{Name: "name4", Type: field.TypeString, Nullable: true},
		{Name: "name5", Type: field.TypeString, Nullable: true},
		{Name: "name6", Type: field.TypeString, Nullable: true},
		{Name: "name7", Type: field.TypeString, Nullable: true},
		{Name: "name8", Type: field.TypeString, Nullable: true},
		{Name: "name9", Type: field.TypeString, Nullable: true},
		{Name: "name10", Type: field.TypeString, Nullable: true},
		{Name: "machine_machine_accessories", Type: field.TypeInt, Nullable: true},
	}
	// MachineAccessoriesTable holds the schema information for the "machine_accessories" table.
	MachineAccessoriesTable = &schema.Table{
		Name:       "machine_accessories",
		Columns:    MachineAccessoriesColumns,
		PrimaryKey: []*schema.Column{MachineAccessoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "machine_accessories_machines_machineAccessories",
				Columns:    []*schema.Column{MachineAccessoriesColumns[11]},
				RefColumns: []*schema.Column{MachinesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// MachineSpecificationsColumns holds the columns for the "machine_specifications" table.
	MachineSpecificationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "machine_number", Type: field.TypeInt},
		{Name: "machine_type", Type: field.TypeString},
		{Name: "drive", Type: field.TypeString},
		{Name: "load_capacity", Type: field.TypeUint},
		{Name: "year", Type: field.TypeUint},
		{Name: "motor_hours", Type: field.TypeUint},
		{Name: "passing_height", Type: field.TypeUint, Nullable: true},
		{Name: "lift_height", Type: field.TypeUint},
		{Name: "weight", Type: field.TypeUint},
		{Name: "forks", Type: field.TypeString},
		{Name: "mast_type", Type: field.TypeString, Nullable: true},
		{Name: "additional_attributes", Type: field.TypeString, Nullable: true},
		{Name: "equipment", Type: field.TypeString, Nullable: true},
		{Name: "engine", Type: field.TypeString},
		{Name: "hydraulic_control", Type: field.TypeString},
		{Name: "drive_control", Type: field.TypeString},
		{Name: "cabin", Type: field.TypeString},
		{Name: "lights", Type: field.TypeString},
		{Name: "battery", Type: field.TypeString, Nullable: true},
		{Name: "machine_machine_specification", Type: field.TypeInt, Nullable: true},
	}
	// MachineSpecificationsTable holds the schema information for the "machine_specifications" table.
	MachineSpecificationsTable = &schema.Table{
		Name:       "machine_specifications",
		Columns:    MachineSpecificationsColumns,
		PrimaryKey: []*schema.Column{MachineSpecificationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "machine_specifications_machines_machineSpecification",
				Columns:    []*schema.Column{MachineSpecificationsColumns[20]},
				RefColumns: []*schema.Column{MachinesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// SessionsColumns holds the columns for the "sessions" table.
	SessionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "token", Type: field.TypeString},
		{Name: "ip", Type: field.TypeString},
		{Name: "device", Type: field.TypeString},
		{Name: "used", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "user_sessions", Type: field.TypeInt, Nullable: true},
	}
	// SessionsTable holds the schema information for the "sessions" table.
	SessionsTable = &schema.Table{
		Name:       "sessions",
		Columns:    SessionsColumns,
		PrimaryKey: []*schema.Column{SessionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sessions_users_sessions",
				Columns:    []*schema.Column{SessionsColumns[7]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "email", Type: field.TypeString},
		{Name: "password", Type: field.TypeString},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		MachinesTable,
		MachineAccessoriesTable,
		MachineSpecificationsTable,
		SessionsTable,
		UsersTable,
	}
)

func init() {
	MachineAccessoriesTable.ForeignKeys[0].RefTable = MachinesTable
	MachineSpecificationsTable.ForeignKeys[0].RefTable = MachinesTable
	SessionsTable.ForeignKeys[0].RefTable = UsersTable
}
