// Code generated by ent, DO NOT EDIT.

package machineaccessories

import (
	"api/ent/predicate"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldID), id))
	})
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldID), id))
	})
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.NEQ(s.C(FieldID), id))
	})
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		v := make([]any, len(ids))
		for i := range v {
			v[i] = ids[i]
		}
		s.Where(sql.In(s.C(FieldID), v...))
	})
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		v := make([]any, len(ids))
		for i := range v {
			v[i] = ids[i]
		}
		s.Where(sql.NotIn(s.C(FieldID), v...))
	})
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.GT(s.C(FieldID), id))
	})
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.GTE(s.C(FieldID), id))
	})
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.LT(s.C(FieldID), id))
	})
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.LTE(s.C(FieldID), id))
	})
}

// Name1 applies equality check predicate on the "name1" field. It's identical to Name1EQ.
func Name1(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldName1), v))
	})
}

// Name2 applies equality check predicate on the "name2" field. It's identical to Name2EQ.
func Name2(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldName2), v))
	})
}

// Name3 applies equality check predicate on the "name3" field. It's identical to Name3EQ.
func Name3(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldName3), v))
	})
}

// Name4 applies equality check predicate on the "name4" field. It's identical to Name4EQ.
func Name4(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldName4), v))
	})
}

// Name5 applies equality check predicate on the "name5" field. It's identical to Name5EQ.
func Name5(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldName5), v))
	})
}

// Name6 applies equality check predicate on the "name6" field. It's identical to Name6EQ.
func Name6(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldName6), v))
	})
}

// Name7 applies equality check predicate on the "name7" field. It's identical to Name7EQ.
func Name7(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldName7), v))
	})
}

// Name8 applies equality check predicate on the "name8" field. It's identical to Name8EQ.
func Name8(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldName8), v))
	})
}

// Name9 applies equality check predicate on the "name9" field. It's identical to Name9EQ.
func Name9(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldName9), v))
	})
}

// Name10 applies equality check predicate on the "name10" field. It's identical to Name10EQ.
func Name10(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldName10), v))
	})
}

// Name1EQ applies the EQ predicate on the "name1" field.
func Name1EQ(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldName1), v))
	})
}

// Name1NEQ applies the NEQ predicate on the "name1" field.
func Name1NEQ(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.NEQ(s.C(FieldName1), v))
	})
}

// Name1In applies the In predicate on the "name1" field.
func Name1In(vs ...string) predicate.MachineAccessories {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.In(s.C(FieldName1), v...))
	})
}

// Name1NotIn applies the NotIn predicate on the "name1" field.
func Name1NotIn(vs ...string) predicate.MachineAccessories {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.NotIn(s.C(FieldName1), v...))
	})
}

// Name1GT applies the GT predicate on the "name1" field.
func Name1GT(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.GT(s.C(FieldName1), v))
	})
}

// Name1GTE applies the GTE predicate on the "name1" field.
func Name1GTE(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.GTE(s.C(FieldName1), v))
	})
}

// Name1LT applies the LT predicate on the "name1" field.
func Name1LT(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.LT(s.C(FieldName1), v))
	})
}

// Name1LTE applies the LTE predicate on the "name1" field.
func Name1LTE(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.LTE(s.C(FieldName1), v))
	})
}

// Name1Contains applies the Contains predicate on the "name1" field.
func Name1Contains(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.Contains(s.C(FieldName1), v))
	})
}

// Name1HasPrefix applies the HasPrefix predicate on the "name1" field.
func Name1HasPrefix(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.HasPrefix(s.C(FieldName1), v))
	})
}

// Name1HasSuffix applies the HasSuffix predicate on the "name1" field.
func Name1HasSuffix(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.HasSuffix(s.C(FieldName1), v))
	})
}

// Name1IsNil applies the IsNil predicate on the "name1" field.
func Name1IsNil() predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.IsNull(s.C(FieldName1)))
	})
}

// Name1NotNil applies the NotNil predicate on the "name1" field.
func Name1NotNil() predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.NotNull(s.C(FieldName1)))
	})
}

// Name1EqualFold applies the EqualFold predicate on the "name1" field.
func Name1EqualFold(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.EqualFold(s.C(FieldName1), v))
	})
}

// Name1ContainsFold applies the ContainsFold predicate on the "name1" field.
func Name1ContainsFold(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.ContainsFold(s.C(FieldName1), v))
	})
}

// Name2EQ applies the EQ predicate on the "name2" field.
func Name2EQ(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldName2), v))
	})
}

// Name2NEQ applies the NEQ predicate on the "name2" field.
func Name2NEQ(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.NEQ(s.C(FieldName2), v))
	})
}

// Name2In applies the In predicate on the "name2" field.
func Name2In(vs ...string) predicate.MachineAccessories {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.In(s.C(FieldName2), v...))
	})
}

// Name2NotIn applies the NotIn predicate on the "name2" field.
func Name2NotIn(vs ...string) predicate.MachineAccessories {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.NotIn(s.C(FieldName2), v...))
	})
}

// Name2GT applies the GT predicate on the "name2" field.
func Name2GT(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.GT(s.C(FieldName2), v))
	})
}

// Name2GTE applies the GTE predicate on the "name2" field.
func Name2GTE(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.GTE(s.C(FieldName2), v))
	})
}

// Name2LT applies the LT predicate on the "name2" field.
func Name2LT(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.LT(s.C(FieldName2), v))
	})
}

// Name2LTE applies the LTE predicate on the "name2" field.
func Name2LTE(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.LTE(s.C(FieldName2), v))
	})
}

// Name2Contains applies the Contains predicate on the "name2" field.
func Name2Contains(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.Contains(s.C(FieldName2), v))
	})
}

// Name2HasPrefix applies the HasPrefix predicate on the "name2" field.
func Name2HasPrefix(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.HasPrefix(s.C(FieldName2), v))
	})
}

// Name2HasSuffix applies the HasSuffix predicate on the "name2" field.
func Name2HasSuffix(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.HasSuffix(s.C(FieldName2), v))
	})
}

// Name2IsNil applies the IsNil predicate on the "name2" field.
func Name2IsNil() predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.IsNull(s.C(FieldName2)))
	})
}

// Name2NotNil applies the NotNil predicate on the "name2" field.
func Name2NotNil() predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.NotNull(s.C(FieldName2)))
	})
}

// Name2EqualFold applies the EqualFold predicate on the "name2" field.
func Name2EqualFold(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.EqualFold(s.C(FieldName2), v))
	})
}

// Name2ContainsFold applies the ContainsFold predicate on the "name2" field.
func Name2ContainsFold(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.ContainsFold(s.C(FieldName2), v))
	})
}

// Name3EQ applies the EQ predicate on the "name3" field.
func Name3EQ(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldName3), v))
	})
}

// Name3NEQ applies the NEQ predicate on the "name3" field.
func Name3NEQ(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.NEQ(s.C(FieldName3), v))
	})
}

// Name3In applies the In predicate on the "name3" field.
func Name3In(vs ...string) predicate.MachineAccessories {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.In(s.C(FieldName3), v...))
	})
}

// Name3NotIn applies the NotIn predicate on the "name3" field.
func Name3NotIn(vs ...string) predicate.MachineAccessories {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.NotIn(s.C(FieldName3), v...))
	})
}

// Name3GT applies the GT predicate on the "name3" field.
func Name3GT(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.GT(s.C(FieldName3), v))
	})
}

// Name3GTE applies the GTE predicate on the "name3" field.
func Name3GTE(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.GTE(s.C(FieldName3), v))
	})
}

// Name3LT applies the LT predicate on the "name3" field.
func Name3LT(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.LT(s.C(FieldName3), v))
	})
}

// Name3LTE applies the LTE predicate on the "name3" field.
func Name3LTE(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.LTE(s.C(FieldName3), v))
	})
}

// Name3Contains applies the Contains predicate on the "name3" field.
func Name3Contains(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.Contains(s.C(FieldName3), v))
	})
}

// Name3HasPrefix applies the HasPrefix predicate on the "name3" field.
func Name3HasPrefix(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.HasPrefix(s.C(FieldName3), v))
	})
}

// Name3HasSuffix applies the HasSuffix predicate on the "name3" field.
func Name3HasSuffix(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.HasSuffix(s.C(FieldName3), v))
	})
}

// Name3IsNil applies the IsNil predicate on the "name3" field.
func Name3IsNil() predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.IsNull(s.C(FieldName3)))
	})
}

// Name3NotNil applies the NotNil predicate on the "name3" field.
func Name3NotNil() predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.NotNull(s.C(FieldName3)))
	})
}

// Name3EqualFold applies the EqualFold predicate on the "name3" field.
func Name3EqualFold(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.EqualFold(s.C(FieldName3), v))
	})
}

// Name3ContainsFold applies the ContainsFold predicate on the "name3" field.
func Name3ContainsFold(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.ContainsFold(s.C(FieldName3), v))
	})
}

// Name4EQ applies the EQ predicate on the "name4" field.
func Name4EQ(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldName4), v))
	})
}

// Name4NEQ applies the NEQ predicate on the "name4" field.
func Name4NEQ(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.NEQ(s.C(FieldName4), v))
	})
}

// Name4In applies the In predicate on the "name4" field.
func Name4In(vs ...string) predicate.MachineAccessories {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.In(s.C(FieldName4), v...))
	})
}

// Name4NotIn applies the NotIn predicate on the "name4" field.
func Name4NotIn(vs ...string) predicate.MachineAccessories {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.NotIn(s.C(FieldName4), v...))
	})
}

// Name4GT applies the GT predicate on the "name4" field.
func Name4GT(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.GT(s.C(FieldName4), v))
	})
}

// Name4GTE applies the GTE predicate on the "name4" field.
func Name4GTE(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.GTE(s.C(FieldName4), v))
	})
}

// Name4LT applies the LT predicate on the "name4" field.
func Name4LT(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.LT(s.C(FieldName4), v))
	})
}

// Name4LTE applies the LTE predicate on the "name4" field.
func Name4LTE(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.LTE(s.C(FieldName4), v))
	})
}

// Name4Contains applies the Contains predicate on the "name4" field.
func Name4Contains(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.Contains(s.C(FieldName4), v))
	})
}

// Name4HasPrefix applies the HasPrefix predicate on the "name4" field.
func Name4HasPrefix(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.HasPrefix(s.C(FieldName4), v))
	})
}

// Name4HasSuffix applies the HasSuffix predicate on the "name4" field.
func Name4HasSuffix(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.HasSuffix(s.C(FieldName4), v))
	})
}

// Name4IsNil applies the IsNil predicate on the "name4" field.
func Name4IsNil() predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.IsNull(s.C(FieldName4)))
	})
}

// Name4NotNil applies the NotNil predicate on the "name4" field.
func Name4NotNil() predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.NotNull(s.C(FieldName4)))
	})
}

// Name4EqualFold applies the EqualFold predicate on the "name4" field.
func Name4EqualFold(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.EqualFold(s.C(FieldName4), v))
	})
}

// Name4ContainsFold applies the ContainsFold predicate on the "name4" field.
func Name4ContainsFold(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.ContainsFold(s.C(FieldName4), v))
	})
}

// Name5EQ applies the EQ predicate on the "name5" field.
func Name5EQ(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldName5), v))
	})
}

// Name5NEQ applies the NEQ predicate on the "name5" field.
func Name5NEQ(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.NEQ(s.C(FieldName5), v))
	})
}

// Name5In applies the In predicate on the "name5" field.
func Name5In(vs ...string) predicate.MachineAccessories {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.In(s.C(FieldName5), v...))
	})
}

// Name5NotIn applies the NotIn predicate on the "name5" field.
func Name5NotIn(vs ...string) predicate.MachineAccessories {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.NotIn(s.C(FieldName5), v...))
	})
}

// Name5GT applies the GT predicate on the "name5" field.
func Name5GT(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.GT(s.C(FieldName5), v))
	})
}

// Name5GTE applies the GTE predicate on the "name5" field.
func Name5GTE(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.GTE(s.C(FieldName5), v))
	})
}

// Name5LT applies the LT predicate on the "name5" field.
func Name5LT(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.LT(s.C(FieldName5), v))
	})
}

// Name5LTE applies the LTE predicate on the "name5" field.
func Name5LTE(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.LTE(s.C(FieldName5), v))
	})
}

// Name5Contains applies the Contains predicate on the "name5" field.
func Name5Contains(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.Contains(s.C(FieldName5), v))
	})
}

// Name5HasPrefix applies the HasPrefix predicate on the "name5" field.
func Name5HasPrefix(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.HasPrefix(s.C(FieldName5), v))
	})
}

// Name5HasSuffix applies the HasSuffix predicate on the "name5" field.
func Name5HasSuffix(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.HasSuffix(s.C(FieldName5), v))
	})
}

// Name5IsNil applies the IsNil predicate on the "name5" field.
func Name5IsNil() predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.IsNull(s.C(FieldName5)))
	})
}

// Name5NotNil applies the NotNil predicate on the "name5" field.
func Name5NotNil() predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.NotNull(s.C(FieldName5)))
	})
}

// Name5EqualFold applies the EqualFold predicate on the "name5" field.
func Name5EqualFold(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.EqualFold(s.C(FieldName5), v))
	})
}

// Name5ContainsFold applies the ContainsFold predicate on the "name5" field.
func Name5ContainsFold(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.ContainsFold(s.C(FieldName5), v))
	})
}

// Name6EQ applies the EQ predicate on the "name6" field.
func Name6EQ(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldName6), v))
	})
}

// Name6NEQ applies the NEQ predicate on the "name6" field.
func Name6NEQ(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.NEQ(s.C(FieldName6), v))
	})
}

// Name6In applies the In predicate on the "name6" field.
func Name6In(vs ...string) predicate.MachineAccessories {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.In(s.C(FieldName6), v...))
	})
}

// Name6NotIn applies the NotIn predicate on the "name6" field.
func Name6NotIn(vs ...string) predicate.MachineAccessories {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.NotIn(s.C(FieldName6), v...))
	})
}

// Name6GT applies the GT predicate on the "name6" field.
func Name6GT(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.GT(s.C(FieldName6), v))
	})
}

// Name6GTE applies the GTE predicate on the "name6" field.
func Name6GTE(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.GTE(s.C(FieldName6), v))
	})
}

// Name6LT applies the LT predicate on the "name6" field.
func Name6LT(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.LT(s.C(FieldName6), v))
	})
}

// Name6LTE applies the LTE predicate on the "name6" field.
func Name6LTE(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.LTE(s.C(FieldName6), v))
	})
}

// Name6Contains applies the Contains predicate on the "name6" field.
func Name6Contains(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.Contains(s.C(FieldName6), v))
	})
}

// Name6HasPrefix applies the HasPrefix predicate on the "name6" field.
func Name6HasPrefix(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.HasPrefix(s.C(FieldName6), v))
	})
}

// Name6HasSuffix applies the HasSuffix predicate on the "name6" field.
func Name6HasSuffix(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.HasSuffix(s.C(FieldName6), v))
	})
}

// Name6IsNil applies the IsNil predicate on the "name6" field.
func Name6IsNil() predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.IsNull(s.C(FieldName6)))
	})
}

// Name6NotNil applies the NotNil predicate on the "name6" field.
func Name6NotNil() predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.NotNull(s.C(FieldName6)))
	})
}

// Name6EqualFold applies the EqualFold predicate on the "name6" field.
func Name6EqualFold(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.EqualFold(s.C(FieldName6), v))
	})
}

// Name6ContainsFold applies the ContainsFold predicate on the "name6" field.
func Name6ContainsFold(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.ContainsFold(s.C(FieldName6), v))
	})
}

// Name7EQ applies the EQ predicate on the "name7" field.
func Name7EQ(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldName7), v))
	})
}

// Name7NEQ applies the NEQ predicate on the "name7" field.
func Name7NEQ(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.NEQ(s.C(FieldName7), v))
	})
}

// Name7In applies the In predicate on the "name7" field.
func Name7In(vs ...string) predicate.MachineAccessories {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.In(s.C(FieldName7), v...))
	})
}

// Name7NotIn applies the NotIn predicate on the "name7" field.
func Name7NotIn(vs ...string) predicate.MachineAccessories {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.NotIn(s.C(FieldName7), v...))
	})
}

// Name7GT applies the GT predicate on the "name7" field.
func Name7GT(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.GT(s.C(FieldName7), v))
	})
}

// Name7GTE applies the GTE predicate on the "name7" field.
func Name7GTE(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.GTE(s.C(FieldName7), v))
	})
}

// Name7LT applies the LT predicate on the "name7" field.
func Name7LT(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.LT(s.C(FieldName7), v))
	})
}

// Name7LTE applies the LTE predicate on the "name7" field.
func Name7LTE(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.LTE(s.C(FieldName7), v))
	})
}

// Name7Contains applies the Contains predicate on the "name7" field.
func Name7Contains(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.Contains(s.C(FieldName7), v))
	})
}

// Name7HasPrefix applies the HasPrefix predicate on the "name7" field.
func Name7HasPrefix(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.HasPrefix(s.C(FieldName7), v))
	})
}

// Name7HasSuffix applies the HasSuffix predicate on the "name7" field.
func Name7HasSuffix(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.HasSuffix(s.C(FieldName7), v))
	})
}

// Name7IsNil applies the IsNil predicate on the "name7" field.
func Name7IsNil() predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.IsNull(s.C(FieldName7)))
	})
}

// Name7NotNil applies the NotNil predicate on the "name7" field.
func Name7NotNil() predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.NotNull(s.C(FieldName7)))
	})
}

// Name7EqualFold applies the EqualFold predicate on the "name7" field.
func Name7EqualFold(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.EqualFold(s.C(FieldName7), v))
	})
}

// Name7ContainsFold applies the ContainsFold predicate on the "name7" field.
func Name7ContainsFold(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.ContainsFold(s.C(FieldName7), v))
	})
}

// Name8EQ applies the EQ predicate on the "name8" field.
func Name8EQ(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldName8), v))
	})
}

// Name8NEQ applies the NEQ predicate on the "name8" field.
func Name8NEQ(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.NEQ(s.C(FieldName8), v))
	})
}

// Name8In applies the In predicate on the "name8" field.
func Name8In(vs ...string) predicate.MachineAccessories {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.In(s.C(FieldName8), v...))
	})
}

// Name8NotIn applies the NotIn predicate on the "name8" field.
func Name8NotIn(vs ...string) predicate.MachineAccessories {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.NotIn(s.C(FieldName8), v...))
	})
}

// Name8GT applies the GT predicate on the "name8" field.
func Name8GT(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.GT(s.C(FieldName8), v))
	})
}

// Name8GTE applies the GTE predicate on the "name8" field.
func Name8GTE(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.GTE(s.C(FieldName8), v))
	})
}

// Name8LT applies the LT predicate on the "name8" field.
func Name8LT(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.LT(s.C(FieldName8), v))
	})
}

// Name8LTE applies the LTE predicate on the "name8" field.
func Name8LTE(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.LTE(s.C(FieldName8), v))
	})
}

// Name8Contains applies the Contains predicate on the "name8" field.
func Name8Contains(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.Contains(s.C(FieldName8), v))
	})
}

// Name8HasPrefix applies the HasPrefix predicate on the "name8" field.
func Name8HasPrefix(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.HasPrefix(s.C(FieldName8), v))
	})
}

// Name8HasSuffix applies the HasSuffix predicate on the "name8" field.
func Name8HasSuffix(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.HasSuffix(s.C(FieldName8), v))
	})
}

// Name8IsNil applies the IsNil predicate on the "name8" field.
func Name8IsNil() predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.IsNull(s.C(FieldName8)))
	})
}

// Name8NotNil applies the NotNil predicate on the "name8" field.
func Name8NotNil() predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.NotNull(s.C(FieldName8)))
	})
}

// Name8EqualFold applies the EqualFold predicate on the "name8" field.
func Name8EqualFold(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.EqualFold(s.C(FieldName8), v))
	})
}

// Name8ContainsFold applies the ContainsFold predicate on the "name8" field.
func Name8ContainsFold(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.ContainsFold(s.C(FieldName8), v))
	})
}

// Name9EQ applies the EQ predicate on the "name9" field.
func Name9EQ(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldName9), v))
	})
}

// Name9NEQ applies the NEQ predicate on the "name9" field.
func Name9NEQ(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.NEQ(s.C(FieldName9), v))
	})
}

// Name9In applies the In predicate on the "name9" field.
func Name9In(vs ...string) predicate.MachineAccessories {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.In(s.C(FieldName9), v...))
	})
}

// Name9NotIn applies the NotIn predicate on the "name9" field.
func Name9NotIn(vs ...string) predicate.MachineAccessories {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.NotIn(s.C(FieldName9), v...))
	})
}

// Name9GT applies the GT predicate on the "name9" field.
func Name9GT(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.GT(s.C(FieldName9), v))
	})
}

// Name9GTE applies the GTE predicate on the "name9" field.
func Name9GTE(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.GTE(s.C(FieldName9), v))
	})
}

// Name9LT applies the LT predicate on the "name9" field.
func Name9LT(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.LT(s.C(FieldName9), v))
	})
}

// Name9LTE applies the LTE predicate on the "name9" field.
func Name9LTE(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.LTE(s.C(FieldName9), v))
	})
}

// Name9Contains applies the Contains predicate on the "name9" field.
func Name9Contains(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.Contains(s.C(FieldName9), v))
	})
}

// Name9HasPrefix applies the HasPrefix predicate on the "name9" field.
func Name9HasPrefix(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.HasPrefix(s.C(FieldName9), v))
	})
}

// Name9HasSuffix applies the HasSuffix predicate on the "name9" field.
func Name9HasSuffix(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.HasSuffix(s.C(FieldName9), v))
	})
}

// Name9IsNil applies the IsNil predicate on the "name9" field.
func Name9IsNil() predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.IsNull(s.C(FieldName9)))
	})
}

// Name9NotNil applies the NotNil predicate on the "name9" field.
func Name9NotNil() predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.NotNull(s.C(FieldName9)))
	})
}

// Name9EqualFold applies the EqualFold predicate on the "name9" field.
func Name9EqualFold(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.EqualFold(s.C(FieldName9), v))
	})
}

// Name9ContainsFold applies the ContainsFold predicate on the "name9" field.
func Name9ContainsFold(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.ContainsFold(s.C(FieldName9), v))
	})
}

// Name10EQ applies the EQ predicate on the "name10" field.
func Name10EQ(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldName10), v))
	})
}

// Name10NEQ applies the NEQ predicate on the "name10" field.
func Name10NEQ(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.NEQ(s.C(FieldName10), v))
	})
}

// Name10In applies the In predicate on the "name10" field.
func Name10In(vs ...string) predicate.MachineAccessories {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.In(s.C(FieldName10), v...))
	})
}

// Name10NotIn applies the NotIn predicate on the "name10" field.
func Name10NotIn(vs ...string) predicate.MachineAccessories {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.NotIn(s.C(FieldName10), v...))
	})
}

// Name10GT applies the GT predicate on the "name10" field.
func Name10GT(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.GT(s.C(FieldName10), v))
	})
}

// Name10GTE applies the GTE predicate on the "name10" field.
func Name10GTE(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.GTE(s.C(FieldName10), v))
	})
}

// Name10LT applies the LT predicate on the "name10" field.
func Name10LT(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.LT(s.C(FieldName10), v))
	})
}

// Name10LTE applies the LTE predicate on the "name10" field.
func Name10LTE(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.LTE(s.C(FieldName10), v))
	})
}

// Name10Contains applies the Contains predicate on the "name10" field.
func Name10Contains(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.Contains(s.C(FieldName10), v))
	})
}

// Name10HasPrefix applies the HasPrefix predicate on the "name10" field.
func Name10HasPrefix(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.HasPrefix(s.C(FieldName10), v))
	})
}

// Name10HasSuffix applies the HasSuffix predicate on the "name10" field.
func Name10HasSuffix(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.HasSuffix(s.C(FieldName10), v))
	})
}

// Name10IsNil applies the IsNil predicate on the "name10" field.
func Name10IsNil() predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.IsNull(s.C(FieldName10)))
	})
}

// Name10NotNil applies the NotNil predicate on the "name10" field.
func Name10NotNil() predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.NotNull(s.C(FieldName10)))
	})
}

// Name10EqualFold applies the EqualFold predicate on the "name10" field.
func Name10EqualFold(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.EqualFold(s.C(FieldName10), v))
	})
}

// Name10ContainsFold applies the ContainsFold predicate on the "name10" field.
func Name10ContainsFold(v string) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s.Where(sql.ContainsFold(s.C(FieldName10), v))
	})
}

// HasMachine applies the HasEdge predicate on the "machine" edge.
func HasMachine() predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.To(MachineTable, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, MachineTable, MachineColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasMachineWith applies the HasEdge predicate on the "machine" edge with a given conditions (other predicates).
func HasMachineWith(preds ...predicate.Machine) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.To(MachineInverseTable, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, MachineTable, MachineColumn),
		)
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.MachineAccessories) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.MachineAccessories) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.MachineAccessories) predicate.MachineAccessories {
	return predicate.MachineAccessories(func(s *sql.Selector) {
		p(s.Not())
	})
}
